# Managing Images

In this use case, we will understand how the normal image is used and after adding few functionalities, how to use it as updated image for current and other projects.

Pull the Nginx image from quay.io registry
$ podman pull quay.io/redhattraining/nginx:1.17

Ensure image is available in your local server
$ podman images

Create the container using the downloaded image with port mapping 8080 for localhost and 80 for container
$ podman run --name con_1 -dp 8080:80 quay.io/redhattraining/nginx:1.17

Login to the container
podman exec -it con_1 /bin/bash

Update the index.html with some content
root@b9d5739af239/:$ echo 'This is use case 3' > /usr/share/nginx/html/index.html

Get out of the container
root@b9d5739af239:/$ exit 

$ curl 127.0.0.1:8080
This is use case 3

Stop the container 
$ podman stop con_1

Take the backup of the container in the name of "myimage_1.1" image in the localhost
$ podman commit -a <author Name> <current_container_name> <new_current_image_name>>
$ podman commit -a arun con_1 myimage_1.1

Check the current images
$ podman images

Now, run the container from the new image "myimage_1.1"  
$ podman run --name con_2 -dp 8080:80 myimage1.1 


podman exec -it con_2 /bin/bash


root@cfa21f02a77d:/# echo 'This is the output from con_2' > /usr/share/nginx/html/index.html


root@cfa21f02a77d:/# exit

$ curl 127.0.0.1:8080
This is the output from con_2


